name: build

on: [push]

env:
  app_version_number: '2.2.0'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
           go-version: '^1.19'
        
# Preparing folder structure for all platforms

      - name: Create base folders for MacOS x86, Windows 32 bit and Windows 64 bit platforms
        run: mkdir -p dist/whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}} dist/whatsapp-jpeg-repair-win32-v${{env.app_version_number}} dist/whatsapp-jpeg-repair-win-x64-v${{env.app_version_number}}

      - name: Create internal folders for MacOS x86, Windows 32 bit and Windows 64 bit platforms
        run: mkdir -p dist/whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}}/whatsapp-files dist/whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}}/repaired-files dist/whatsapp-jpeg-repair-win32-v${{env.app_version_number}}/whatsapp-files dist/whatsapp-jpeg-repair-win32-v${{env.app_version_number}}/repaired-files dist/whatsapp-jpeg-repair-win-x64-v${{env.app_version_number}}/whatsapp-files dist/whatsapp-jpeg-repair-win-x64-v${{env.app_version_number}}/repaired-files

# Building the application for all platforms

      - name: Run build for x86-based MacOS 64-bit
        run: env GOOS=darwin GOARCH=amd64 go build -o dist/whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}} WhatsAppJpegRepair.go

      - name: Run build for for Windows 32-bit
        run: env GOOS=windows GOARCH=386 go build -o dist/whatsapp-jpeg-repair-win32-v${{env.app_version_number}} WhatsAppJpegRepair.go

      - name: Run build for for Windows 64-bit
        run: env GOOS=windows GOARCH=amd64 go build -o dist/whatsapp-jpeg-repair-win-x64-v${{env.app_version_number}} WhatsAppJpegRepair.go

# Generating PDF files
      - name: Generate PDF for README
        uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_dir: README.md
          output_dir: .
          images_dir: .
          build_html: false

      - name: Generate PDF for CHANGELOG
        uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_dir: CHANGELOG.md
          output_dir: .
          images_dir: .
          build_html: false

# Preparing zip-archives

# Preparing zip-archive for MacOS x86 platform

      - name: Copy source code, sh, license and readme files to MacOS x86 64bit folder
        run: cp -t dist/whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}} WhatsAppJpegRepair.go runme.sh LICENSE.txt README.pdf CHANGELOG.pdf

      - name: Copy sample broken whatsapp files to MacOS x86 64bit folder
        run: cp -t dist/whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}}/whatsapp-files whatsapp-files/*.jpg

      - uses: papeloto/action-zip@v1
        with:
          files: dist/whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}}
          dest: dist/whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}}.zip

# Preparing zip-archive for Windows 32bit platform

      - name: Copy bat, license and readme files to Windows 32 bit folder
        run: cp -t dist/whatsapp-jpeg-repair-win32-v${{env.app_version_number}} runme.bat LICENSE.txt README.pdf CHANGELOG.pdf

      - name: Copy sample broken whatsapp files to Windows 32 bit folder
        run: cp -t dist/whatsapp-jpeg-repair-win32-v${{env.app_version_number}}/whatsapp-files whatsapp-files/*.jpg

      - uses: papeloto/action-zip@v1
        with:
          files: dist/whatsapp-jpeg-repair-win32-v${{env.app_version_number}}
          dest: dist/whatsapp-jpeg-repair-win32-v${{env.app_version_number}}.zip

# Preparing zip-archive for Windows 64bit platform

      - name: Copy bat, license and readme files to Windows 64 bit folder
        run: cp -t dist/whatsapp-jpeg-repair-win-x64-v${{env.app_version_number}} runme.bat LICENSE.txt README.pdf CHANGELOG.pdf

      - name: Copy sample broken whatsapp files to Windows 64 bit folder
        run: cp -t dist/whatsapp-jpeg-repair-win-x64-v${{env.app_version_number}}/whatsapp-files whatsapp-files/*.jpg

      - uses: papeloto/action-zip@v1
        with:
          files: dist/whatsapp-jpeg-repair-win-x64-v${{env.app_version_number}}
          dest: dist/whatsapp-jpeg-repair-win-x64-v${{env.app_version_number}}.zip

# Upload artifacts for all platforms

      - name: 'Upload Artifact for MacOS Intel x64'
        uses: actions/upload-artifact@v2
        with:
          name: whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}}
          path: dist/whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}}.zip

      - name: Create draft release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         body: "Download application zip file relevant to your operating system:


If you are using 64-bit Windows OS, download: whatsapp-jpeg-repair-win-x64-v${{env.app_version_number}}.zip

If you are using 32-bit Windows OS, download: whatsapp-jpeg-repair-win32-v${{env.app_version_number}}.zip

If you are using MacOS or Linux, download: whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}}.zip."


         tag_name: v${{env.app_version_number}}
         release_name: 'WhatsApp Jpeg Image Repair. Version ${{env.app_version_number}}'
         draft: true
         prerelease: false

      - uses: actions/upload-release-asset@v1.0.1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: dist/whatsapp-jpeg-repair-win-x64-v${{env.app_version_number}}.zip
            asset_name: whatsapp-jpeg-repair-win-x64-v${{env.app_version_number}}.zip
            asset_content_type: application/zip

      - uses: actions/upload-release-asset@v1.0.1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: dist/whatsapp-jpeg-repair-win32-v${{env.app_version_number}}.zip
            asset_name: whatsapp-jpeg-repair-win32-v${{env.app_version_number}}.zip
            asset_content_type: application/zip            

      - uses: actions/upload-release-asset@v1.0.1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: dist/whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}}.zip
            asset_name: whatsapp-jpeg-repair-macos-x86-v${{env.app_version_number}}.zip
            asset_content_type: application/zip

      - uses: eregon/publish-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            release_id: ${{ steps.create_release.outputs.id }}
